@model IsucorpTest.Model.ViewModel.ContactViewModel

@{
    ViewBag.Title = "New Contact";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Add", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal"> 
        @*<br />
        <hr />
        <br />*@
          
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-lg-3 col-md-3 col-sm-12">
                <div class="form-group">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Contact Full Name" } })
                        @*<input id="contactName" type="text" class="form-control" name="contactName" placeholder="Contact Full Name">*@
                    </div>
                </div>               
            </div>
            <div class="col-lg-3 col-md-3 col-sm-12">
                <div class="form-group">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-tasks"></i></span>
                        <select id="contactTypes" class="form-control" name="contactType" placeholder="Contact Type"> 
                            @foreach (var item in Model.ContactTypes)
                            {
                                <option value="@item.Id">
                                    @item.Name
                                </option>
                            }                            
                        </select>
                        @Html.HiddenFor(model => model.ContactTypeId)
                        @Html.HiddenFor(model => model.ContactType)
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-12">
                <div class="form-group">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-phone"></i></span>
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", type = "number", placeholder = "Phone Number" } })
                        @*<input id="phoneNumber" type="text" class="form-control" name="phoneNumber" placeholder="Phone Number">*@
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-12">
                <div class="form-group">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
                        @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", type = "datetime", placeholder = "BirthDate" } })
                        @*<input id="birthDate" type="datetime" class="form-control" name="birthDate" placeholder="Birth Date">*@
                    </div>
                </div>
            </div>
        </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 noPadding">
                    <div class="form-group">
                        <div class="col-lg-12 col-md-12 col-sm-12">   
                            @Html.TextAreaFor(model => model.Description, null)                                                                     
                            @*<textarea id="contactDescription">Type Description here!</textarea>*@                          
                         </div>
                    </div>
                </div>
            </div>           
                <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12">
                        <div class="form-group pull-right">
                            <div class="col-lg-12 col-md-12 col-sm-12">                                
                                <input type="button" class="btn btn-danger" value="Save"/>
                                @*@Html.ActionLink("Save", "Add", "Home", new { @class = "btn btn-danger", id = "addContact" })*@                          
                            </div>
                        </div>
                    </div>
                </div>                                 
    </div>
}

@section Scripts{   
    <script src="~/Scripts/tinymce/js/tinymce/tinymce.min.js"></script>   
    <script>
        tinymce.init({
            selector: 'textarea',
            height: 500,
            theme: 'modern',
            plugins: 'print preview fullpage searchreplace autolink directionality visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists textcolor wordcount imagetools contextmenu colorpicker textpattern help',
            toolbar1: 'formatselect | bold italic strikethrough forecolor backcolor | link | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent  | removeformat',
            image_advtab: true,
            templates: [
                { title: 'Test template 1', content: 'Test 1' },
                { title: 'Test template 2', content: 'Test 2' }
            ],
            content_css: [
                '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i',
                '//www.tinymce.com/css/codepen.min.css'
            ]
        });
    </script>    
    <script>
        $(document).ready(function () {
            $('#ContactTypeId').val(parseInt($('#contactTypes option:selected').val()));
        });

    //    $('#addContact').on("click",
    //    function () {
    //    $.ajax({
    //        type: 'POST',
    //        url: '/Home/AddContact',
    //        dataType: 'json',
    //        data: { contact: Model },
    //        success: function (result) {
    //            console.log("ok");
    //        },
    //        error: function (textStatus, errorThrown) {
    //            console.log(textStatus);
    //            console.log(errorThrown);
    //        }
    //    });
    //});
    </script>       
}


